function h = plotCO2locus(P, T, CO2, varargin)
% Plot the [P, T] locus on top of the RHO density colormap, with the
% liquid-vapor boundary included for good measure.  More than one locus may
% be plotted, in which case P and T will each contain one column per locus.
%
% SYNOPSIS:
%   function res = plotCO2locus(P, T, co2_rho_datafile)
%
% PARAMETERS:
%   P                - P-values of loci to plot
%   T                - T-values of loci to plot
%   CO2              - CO2 data object (as generated by CO2props)
%
% RETURNS:
%   h - handle to graphic

    if (nargin >= 5) 
        pspan = varargin{1};
        tspan = varargin{2};
    else
        pspan = [min(P(:)), max(P(:))];
        tspan = [min(T(:)), max(T(:))];
    end

    resolution = 300;

    pvals = linspace(pspan(1), pspan(2), resolution);
    tvals = linspace(tspan(1), tspan(2), resolution);

    [tgrid, pgrid] = meshgrid(tvals, pvals);

    rho = reshape(CO2.rho(pgrid(:), tgrid(:)), resolution, resolution);

    % drawing density color values
    h = pcolor(tvals, pvals, rho);
    set(h, 'edgeAlpha', 0);
    view(0, 90);
    hold on;

    % adding liquid-vapor-boundary line
    [pc, tc] = CO2CriticalPoint();
    lvb_t = linspace(tspan(1), tc, 100)';
    lvb_p = CO2VaporPressure(lvb_t);

    line(lvb_t, lvb_p, 'lineWidth', 2, 'color', [0 0 0]);

    % Drawing locus
    for i = 1:size(P,2)
        line(T(:,i), P(:,i), 'color', [0 0 0]);
    end
    hold off;
end
