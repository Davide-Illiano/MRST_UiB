function varargout = implicitupwind_mex(varargin)

   % Build MEX edition of same.
   %
   v = regexp(version, '\.', 'split');v = [v{1:2}];

   d = fileparts(mfilename('fullpath'));
   CFLAGS = {'CFLAGS="\$CFLAGS', '-O3', '-Wall', '-Wextra', '-ansi', ...
             '-pedantic', '-Wformat-nonliteral',  '-Wcast-align', ...
             '-Wpointer-arith', '-Wbad-function-cast', ...
             '-Wmissing-prototypes ', '-Wstrict-prototypes', ...
             '-Wmissing-declarations', '-Winline', '-Wundef', ...
             '-Wnested-externs', '-Wcast-qual', '-Wshadow', ...
             '-Wconversion', '-Wwrite-strings', '-Wno-conversion', ...
             '-Wchar-subscripts', '-Wredundant-decls"'};

   SRC = {'implicitupwind.c', 'fluid.c', 'mexutils.c', ...
	  'nlsolvers.c', 'sparse.c', 'system.c', ...
	  'tarjan.c', 'utils.c'};

   INCLUDE = {  };

   OPTS = {'-output', ['implicitupwind_mex.', mexext], '-largeArrayDims' ...
	   '-O', ['-DMATLABVERSION=', v]};

   buildmex(CFLAGS{:}, INCLUDE{:}, OPTS{:}, SRC{:})

   % Call MEX edition.
   [varargout{1:nargout}] = implicitupwind_mex(varargin{:});
end
